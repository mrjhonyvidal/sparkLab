# -*- coding: utf-8 -*-
"""RealCaseLinearRegresion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zJ24fS37_mRxhYXy1dMgfM-5X0YAt68A
"""

!pip install pyspark

from pyspark.sql import SparkSession

spark = SparkSession.builder.appName('reg_example').getOrCreate()

from pyspark.ml.regression import LinearRegression

customer_data = spark.read.csv("customers.csv", inferSchema = True, header = True)

customer_data.printSchema()

customer_data.show()

customer_data.head(1)

from pyspark.ml.linalg import Vectors

from pyspark.ml.feature import VectorAssembler

customer_data.columns

assembler = VectorAssembler(inputCols = ['Avg Session Length', 'Time on App', 'Time on Website', 'Length of Membership'], outputCol = 'features')

output = assembler.transform(customer_data)

output.printSchema()

output.head(1)

final_data = output.select('features', 'Yearly Amount Spent')

final_data.show()

train, test = final_data.randomSplit([0.7,0.3])

train.describe().show()

test.describe().show()

## Create model with train data set
## And evaluate our model with test data set

lr = LinearRegression(labelCol = "Yearly Amount Spent")

linear_regression_model = lr.fit(train)

results = linear_regression_model.evaluate(test)

results.residuals.show() ## values that were failed

results.rootMeanSquaredError ## Average of error in prediction, in our case we're handling are +/- 500, 10 is a low number

results.r2  ## the result gives us that is a good model, +/- 98% accurate prediction

